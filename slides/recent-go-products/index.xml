<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recent-go-products on Recent Presentation Slides</title>
    <link>https://tanstaafl.0pt.jp/slides/recent-go-products/</link>
    <description>Recent content in Recent-go-products on Recent Presentation Slides</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 26 Jul 2017 16:57:54 +0900</lastBuildDate>
    
	<atom:link href="https://tanstaafl.0pt.jp/slides/recent-go-products/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>slide17_2</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide17_2/</link>
      <pubDate>Wed, 26 Jul 2017 16:57:54 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide17_2/</guid>
      <description>JSONで書くと { &amp;quot;bastion-dev&amp;quot;: { &amp;quot;host&amp;quot;:&amp;quot;192.168.100.1&amp;quot;, &amp;quot;port&amp;quot;:&amp;quot;22&amp;quot;, &amp;quot;user&amp;quot;:&amp;quot;bastion-user&amp;quot;, &amp;quot;cert_path&amp;quot;:&amp;quot;/Users/minori.tokuda/.ssh/bastion-dev.pem&amp;quot;, &amp;quot;cascades&amp;quot;: { &amp;quot;app-server&amp;quot;: { &amp;quot;host&amp;quot;:&amp;quot;192.168.100.2&amp;quot;, &amp;quot;port&amp;quot;:&amp;quot;22&amp;quot;, &amp;quot;user&amp;quot;:&amp;quot;appuser&amp;quot;, &amp;quot;cert_path&amp;quot;:&amp;quot;/Users/minori.tokuda/.ssh/bastion-dev.pem&amp;quot;, &amp;quot;tunnels&amp;quot;: { &amp;quot;postgres&amp;quot;: { &amp;quot;local_port&amp;quot;:&amp;quot;15432&amp;quot;, &amp;quot;remote_host&amp;quot;:&amp;quot;192.168.101.10&amp;quot;, &amp;quot;remote_port&amp;quot;:&amp;quot;5432&amp;quot; } } } } } ※ 設定ファイルフォーマットはTOMLのみです</description>
    </item>
    
    <item>
      <title>slide18</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide18/</link>
      <pubDate>Wed, 26 Jul 2017 16:39:47 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide18/</guid>
      <description>今後サポートしたい機能 パスワード接続（現在はpem形式の証明書による認証のみサポート） 踏み台での名前解決 踏み台上の証明書利用</description>
    </item>
    
    <item>
      <title>slide14_2</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide14_2/</link>
      <pubDate>Wed, 26 Jul 2017 16:36:39 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide14_2/</guid>
      <description>例えば、以下のような多段プロキシを貼りたい場合 localhost =&amp;gt; bastion (192.168.100.1) +=&amp;gt; app-server (192.168.100.2) +=&amp;gt; db server (192.168.101.10) port 5432</description>
    </item>
    
    <item>
      <title>slide17</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide17/</link>
      <pubDate>Wed, 26 Jul 2017 16:34:52 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide17/</guid>
      <description>設定ファイル [bastion-dev.cascades.app-server.tunnels.postgres] local_port = &amp;quot;15432&amp;quot; remote_host = &amp;quot;192.168.101.10&amp;quot; remote_port = &amp;quot;5432&amp;quot;</description>
    </item>
    
    <item>
      <title>slide16</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide16/</link>
      <pubDate>Wed, 26 Jul 2017 16:34:49 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide16/</guid>
      <description>設定ファイル [bastion-dev.cascades.app-server] host = &amp;quot;192.168.100.2&amp;quot; port = &amp;quot;22&amp;quot; user = &amp;quot;appuser&amp;quot; cert_path = &amp;quot;/Users/minori.tokuda/.ssh/bastion-dev.pem&amp;quot; # 続く</description>
    </item>
    
    <item>
      <title>slide15</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide15/</link>
      <pubDate>Wed, 26 Jul 2017 16:28:42 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide15/</guid>
      <description>設定ファイル [bastion-dev] host = &amp;quot;192.168.100.1&amp;quot; port = &amp;quot;22&amp;quot; user = &amp;quot;bastion-user&amp;quot; cert_path = &amp;quot;/Users/minori.tokuda/.ssh/bastion-dev.pem&amp;quot; # 続く</description>
    </item>
    
    <item>
      <title>slide14</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide14/</link>
      <pubDate>Wed, 26 Jul 2017 16:28:20 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide14/</guid>
      <description>設定ファイル TOML形式</description>
    </item>
    
    <item>
      <title>slide13</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide13/</link>
      <pubDate>Wed, 26 Jul 2017 16:27:15 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide13/</guid>
      <description>tunnelerの使い方 $ tunneler -c forwarding.toml あとは起動しっぱなしになる</description>
    </item>
    
    <item>
      <title>slide12</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide12/</link>
      <pubDate>Wed, 26 Jul 2017 16:24:47 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide12/</guid>
      <description>OpenSSHでトンネルを張るのは管理が面倒だった TOMLなどのファイルフォーマットで管理したい</description>
    </item>
    
    <item>
      <title>slide11</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide11/</link>
      <pubDate>Wed, 26 Jul 2017 16:14:08 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide11/</guid>
      <description>想定用途 踏み台サーバ経由でしか接続を許可していない環境でローカルから内部のサーバに接続するケース ローカルから開発環境ネットワーク内のDBに直</description>
    </item>
    
    <item>
      <title>slide10</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide10/</link>
      <pubDate>Wed, 26 Jul 2017 16:13:27 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide10/</guid>
      <description>多段SSHプロキシサーバ まだ未完成（基本機能は完成）</description>
    </item>
    
    <item>
      <title>slide09</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide09/</link>
      <pubDate>Wed, 26 Jul 2017 16:13:11 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide09/</guid>
      <description> tunneler https://github.com/minoritea/tunneler </description>
    </item>
    
    <item>
      <title>slide08</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide08/</link>
      <pubDate>Wed, 26 Jul 2017 16:12:18 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide08/</guid>
      <description>つかいかた $ cat foo.toml | toml2json | jq . # jqで整形して出力</description>
    </item>
    
    <item>
      <title>slide07</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide07/</link>
      <pubDate>Wed, 26 Jul 2017 16:08:08 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide07/</guid>
      <description>ほぼgithub.com/pelletier/go-tomlとencoding/jsonの間で値を受け渡しているだけ go-tomlのToMa</description>
    </item>
    
    <item>
      <title>slide06</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide06/</link>
      <pubDate>Wed, 26 Jul 2017 16:06:39 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide06/</guid>
      <description>実装 func tomlToJson(data []byte) ([]byte, error) { tree, err := toml.LoadBytes(data) if err != nil { return []byte{}, err } json, err := json.Marshal(tree.ToMap()) if err != nil { return []byte{}, err } return json, nil }</description>
    </item>
    
    <item>
      <title>slide05</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide05/</link>
      <pubDate>Wed, 26 Jul 2017 16:05:18 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide05/</guid>
      <description>TOMLからJSONへのコンバータ node, python製の同名ツールはあったがgoはなかったので作ってみた</description>
    </item>
    
    <item>
      <title>slide04</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide04/</link>
      <pubDate>Wed, 26 Jul 2017 15:55:47 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide04/</guid>
      <description> toml2json https://github.com/minoritea/toml2json </description>
    </item>
    
    <item>
      <title>slide03</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide03/</link>
      <pubDate>Wed, 26 Jul 2017 15:54:22 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide03/</guid>
      <description>最近作ったGoのプロダクトを紹介します</description>
    </item>
    
    <item>
      <title>slide01</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide01/</link>
      <pubDate>Wed, 26 Jul 2017 15:50:40 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide01/</guid>
      <description>最近作ったGoのプロダクト</description>
    </item>
    
    <item>
      <title>slide02</title>
      <link>https://tanstaafl.0pt.jp/slides/recent-go-products/slide02/</link>
      <pubDate>Wed, 26 Jul 2017 15:50:40 +0900</pubDate>
      
      <guid>https://tanstaafl.0pt.jp/slides/recent-go-products/slide02/</guid>
      <description>自己紹介 @snowcrush お仕事はgoでAPI書いたりしてます イカはじめました</description>
    </item>
    
  </channel>
</rss>